异构计算：
1.同一系统存在两种不同的处理器
2.主处理器(CPU):负责主要流程控制和常规计算
3.协处理器(GPU):负责并行计算，速度快，低延时。

NVIDIA的gpu提供了CUDA的计算框架，一套并行计算编程框架。
但每个公司提供的计算框架都不可以跨平台，所以衍生出了opencl，opencl有苹果开发，可以跨平台使用，通用性强

特性：
1.高性能：opencl具有底层的api，可以投射到更底层的硬件上
2.开源开放
3.适用性强

OpenCL是一个为异构平台编写程序的框架，分为程序和内核，CPU、GPU两个设备端。

openCL平台模型：
1.主机对应设备
2.设备对应计算单元
3.计算单元对应处理节点

执行模型：
1.主机端：
1）运行主机端程序
2）提交内核程序至设备
3）传递参数和数据
4）获取设备执行结果
5) IO处理

2.设备端：
1）在计算单元执行内核程序

三个特别重要的概念：
1）上下文：设备，内核对象，程序对象，存储器对象
2）命令队列：主机和设备交互（内核入队，存储器入队，同步，按序执行，乱序执行）
3）内核：完成openCL应用具体工作

存储器模型
1）主机内存：仅对宿主机即可见
2）常量内存：执行内核期间保持不变
3）私有内存：针对特定工作组，但只对工作组内部可见
4）全局内存：允许读写所有工作项
5）局部内存：针对特定工作组

opencl执行流程：
1）搜索并选择异构系统平台
2）搜索并选择异构系统平台openCL设备
3）创建上下文和命令队列
4）创建程序对象和内核对象
5）执行内核程序
6）获取执行结果并清理环境

搜索并选择openCL平台
1）num_entries:表示opencl平台的索引值。设置为0，以及platforms为NULL表示查询可用的平台数
2）platform:平台的指针
3）num_platforms:表示opencl的数量，一般作为返回值


